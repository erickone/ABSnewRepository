# comprende aquellos queries que son propios de una base de datos, por ejemplo los
# queries para crear las estructuras jerarquicas, arboles de objetivos etc. etc.
siif.dao.nativequeries.SQLHierarchies = select distinct {0} from {1} Start with {2} CONNECT BY Prior {3}={4}
siif.dao.nativequeries.SQLHierarchiesforBudgetingSummary = (select {0} from {1} Start with {2} CONNECT BY Prior {3}={4})
siif.dao.nativequeries.SQLUbication=select region.IdClasifRegional as  idClasifRegional,\
                                      region.descripcion as descripcion, region.numhombres as numhombres, \
                                      region.nummujeres  \
                                      from ( \
                                      select *  from  \
                                      siifabsclasifregional Start with \
                                      idclasifregional = {0} \
                                      CONNECT BY Prior idclasifregional = \
                                      idpadre ) region, \
                                      siifabsnivclasifregional nivel \
                                      where region.idnivclasifregional = \
                                      nivel.idnivclasifregional and \
                                      nivel.municipio = 't'
#Query que se encarga de obtener la dependencia a un nivel indicado,dada un dependencia X
siif.dao.nativequeries.SQLDependency = select distinct dependencia.idDependencia as idDependency, dependencia.clave, \
                                        dependencia.descripcion as  nameDepend \
                                       from (  \
                                           select *  from \
                                             siifabsdependencia Start with \
                                             idDependencia = :denpendeceId \
                                             CONNECT BY Prior idDependencia =  \
                                             idpadre \
                                              union all \
                                            select *  from \
                                             siifabsdependencia Start with \
                                             idDependencia = :denpendeceId1  \
                                             CONNECT BY Prior idpadre = \
                                               idDependencia \
                                             ) dependencia,  \
                                             siifabsnivdependencia nivel \
                                       where dependencia.idnivdependencia = \
                                       nivel.idnivdependencia and

#Query que se encarga de obtener el objeto del gasto a un nivel indicado,dada un Objeto X
siif.dao.nativequeries.SQLObjectExpense = select distinct obj.idobjetogasto,\
                                    obj.adefas,obj.fondo,obj.combancaria,obj.descripcion,obj.habilitada,\
                                    obj.genresguardo,obj.compinicial,obj.irreductible,obj.clave,\
                                    obj.arrendamiento,obj.iddefcvepresupuestal,\
                                    obj.inversionpublica,obj.partidaespecial,\
                                    obj.tipototalgasto,obj.idtipogasto,obj.viatico,\
                                    obj.idpadre,obj.idnivelobjgasto,obj.basico from \
                                    (select distinct *  from siifpppobjetogasto \
                                    Start with idobjetogasto = :objectId CONNECT BY Prior \
                                    idpadre=idobjetogasto union all \
                                    select distinct *  from siifpppobjetogasto \
                                    Start with idobjetogasto = :objectId1 CONNECT BY Prior \
                                    idobjetogasto=idpadre) obj, \
                                    siifpppnivelobjgasto niv where obj.idnivelobjgasto= \
                                    niv.idnivelobjgasto and


siif.dao.nativequeries.SQLDraftProjectByFilters = select distinct ant.idanteproyecto, ant.tipoficha, ant.fundamentolegal, ant.descripcion,\
                ant.fechafin, ant.clave, ant.nombre, ant.proposito, ant.nombrecorto, ant.activo, \
                ant.fechainicio, ant.iddependencia, nvl(ant.idprogramacion, 0) idprogramacion, \
                nvl(ant.idambitoanteproyecto, 0) idambitoanteproyecto, \
                nvl(ant.idestadoanteproyecto, 0) idestadoanteproyecto, \
                nvl(ant.idestatusanteproyecto, 0) idestatusanteproyecto, \
                nvl(ant.idtipoanteproyecto, 0) idtipoanteproyecto, \
                dep.descripcion descripcionDependencia, obj.nombre nombreobjetivo, \
                objeto.nombre nombreObjetivoPadre \
                from siifpppanteproyecto ant \
                inner join siifAbsDependencia dep on ant.iddependencia = dep.iddependencia \
                inner join SiifPPPProgramacion prog on prog.idprogramacion = ant.idprogramacion \
                inner join siifpppObjetivo obj on obj.idobjetivo = prog.idobjetivo \
                inner join siifpppObjetivo objeto on objeto.idobjetivo = obj.idpadre \
                left outer join siifppppreficha preFile on preFile.idanteproyecto = ant.idanteproyecto \
                where ( dep.iddependencia = :idDependencia or :idDependencia = 0) \
                and ( ant.clave like :idAnteProyecto or :idAnteProyecto like '' ) \
                and ( preFile.folio like :idPreFicha or :idPreFicha like '' ) \
                and ( UPPER(ant.nombrecorto) like '%'||UPPER(:nombreCorto)||'%' or :nombreCorto like '' ) \
                and ( ant.idestatusanteproyecto = :status or :status = 0 ) \
                and ( ( \
                ( ant.fechafin between :fechaInicio and :fechaFin ) \
                and ( ant.fechainicio between :fechaInicio and :fechaFin ) \
                ) \
                or ( :fechaInicio is null and :fechaFin is null  ) ) 


